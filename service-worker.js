"use strict";var precacheConfig=[["/healthy-poo/index.html","4e44444e9210e9550941df1369344a49"],["/healthy-poo/static/css/main.0ca17dfc.css","31175e525ee7b35f643b7113b5242d11"],["/healthy-poo/static/js/main.ecfbc7dc.js","ef6da4c8a7b1c2469c86b14e883515a0"],["/healthy-poo/static/media/man-on-toilet.cc0a1649.svg","cc0a1649a1252c4e393143851c1e7d0d"],["/healthy-poo/static/media/stool_brown.ebe42bea.svg","ebe42bea29be8040b4782943c55680db"],["/healthy-poo/static/media/stool_dark.22a2ecc8.svg","22a2ecc82e726cea341e130b2792ef44"],["/healthy-poo/static/media/stool_green.dd88826b.svg","dd88826bd794f34028ed451f2854715b"],["/healthy-poo/static/media/stool_light.e8c49722.svg","e8c49722f3432827218afbe26be0adb9"],["/healthy-poo/static/media/stool_red.647f1245.svg","647f1245e9ff37b9423ed481a33e853a"],["/healthy-poo/static/media/type1_stool.f4a7bbea.svg","f4a7bbeabf9f5e4ffc00b313e1ea9dfa"],["/healthy-poo/static/media/type2_stool.b2e24fe2.svg","b2e24fe23cce6106181c304f0145d3df"],["/healthy-poo/static/media/type3_stool.50738a25.svg","50738a254743507c7cb487106d1737e3"],["/healthy-poo/static/media/type4_stool.cc8da5c2.svg","cc8da5c25a1ef94b2cbac3f2401712e1"],["/healthy-poo/static/media/type5_stool.be8bcb7c.svg","be8bcb7cdd049ed75574ad965fcc7e5c"],["/healthy-poo/static/media/type6_stool.6e0abc50.svg","6e0abc50fdaafda8364d240e18dbc1f6"],["/healthy-poo/static/media/type7_stool.6d995792.svg","6d9957927ff9ba7a63fc1282a69a598d"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/healthy-poo/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});